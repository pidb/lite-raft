syntax = "proto3";
package pirate;

import "eraftpb.proto";

message ReplicaDesc {
    uint64 node_id = 1;
    uint64 replica_id = 2;
    // uint64 store_id = 3;
}

message RaftGroupDesc {
    uint64 group_id = 1;
    repeated uint64 nodes = 2;
    repeated ReplicaDesc replicas = 3;
}

// RaftMessageRequest is the request used to send raft messages using our
// protobuf-based RPC codec.
message RaftMessage {
    uint64 group_id = 1;
    uint64 from_node = 2;
    uint64 to_node = 3;
    // ReplicaMetadata from_replica = 2;
    // ReplicaMetadata to_replica = 3;
    Message msg = 4;
}

// RaftMessageResponse is an empty message returned by raft RPCs. If a
// response is needed it will be sent as a separate message.
message RaftMessageResponse {
}


enum RaftGroupManagementMessageType {
    MsgInitialGroup = 0;
    MsgCreateGroup = 1;
    MsgRemoveGoup = 2;
}

message RaftGroupManagementMessage {
    RaftGroupManagementMessageType msg_type = 1;
    uint64 group_id = 2;
    uint64 replica_id = 3;
    repeated ReplicaDesc replicas = 4;
}